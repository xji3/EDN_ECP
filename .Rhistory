all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
<<<<<<< HEAD
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
Godambe.guess.1 <- NULL
Godambe.guess.2 <- NULL
Godambe.JS      <- NULL
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("PSJS guess 1 Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix= ", paste(Godambe.matrix), "\n")
Godambe.guess.1 <- cbind(Godambe.guess.1, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("PSJS guess 2 Gadient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.2["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.guess.2 <- cbind(Godambe.guess.2, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("JS Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/JS.HKY.rv.nonclock.summary["ll",pair], "\n")
# if(pair == "YER074W_YIL069C") next
Godambe.matrix <- read.table(paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_godambe.txt", sep = ""))
#cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.JS <- cbind(Godambe.JS, c(diag(solve(Godambe.matrix)/dim(gradient.list)[1])))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Harpak/")
missing.0.files <- readLines("./missing_0_species_list.txt")
file.names <- gsub("_pos_seq_formatted", "", gsub("\\.", "_", missing.0.files))
# read in lnL from each log file first
ll.list <- NULL
for (guess in c(1, 3)){
ll <- 0.0
for (i in 1:length(missing.0.files)){
log_file <- paste("./log/PSJS_", file.names[i], "_guess_", guess, "_log.txt",
sep = "")
log_info <- read.table(log_file)
ll <- ll + log_info[ dim(log_info)[1], 1]
}
ll.list <- rbind(ll.list, c(ll, as.numeric(log_info[dim(log_info)[1], 2:((dim(log_info)[2]+1)/2)])))
}
ll.list
# guess 3 has larger lnL
# Tau estimate
exp(ll.list[, 6] - ll.list[, 7])
# Now calculate Godambe matrix
Godambe.Harpak <- NULL
for(guess in c(1,3)){
n <- 0
H <- 0
J <- 0
for(i in 1:length(missing.0.files)){
hessian_file <- paste("./summary/PSJS_", file.names[i], "_guess_", guess, "_hessian.txt",
sep = "")
hessian <- read.table(hessian_file)
H.inc <- matrix(-colSums(hessian), 2, 2)
gradient_file <- paste("./summary/PSJS_", file.names[i], "_guess_", guess, "_gradient.txt",
sep = "")
gradient <- as.matrix(read.table(gradient_file))
J.inc <- crossprod(gradient)
n <- n+dim(gradient)[1]
H <- H + H.inc
J <- J + J.inc
}
H <- H/n
J <- J/n
G <- H %*% (solve(J, H))
Godambe.Harpak <- cbind(Godambe.Harpak, c(solve(G)/n))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Harpak/")
missing.0.files <- readLines("./missing_0_species_list.txt")
file.names <- gsub("_pos_seq_formatted", "", gsub("\\.", "_", missing.0.files))
# read in lnL from each log file first
ll.list <- NULL
for (guess in c(1, 3)){
ll <- 0.0
for (i in 1:length(missing.0.files)){
log_file <- paste("./log/PSJS_", file.names[i], "_guess_", guess, "_log.txt",
sep = "")
log_info <- read.table(log_file)
ll <- ll + log_info[ dim(log_info)[1], 1]
}
ll.list <- rbind(ll.list, c(ll, as.numeric(log_info[dim(log_info)[1], 2:((dim(log_info)[2]+1)/2)])))
}
ll.list
# guess 3 has larger lnL
# Tau estimate
exp(ll.list[, 6] - ll.list[, 7])
# Now calculate Godambe matrix
Godambe.Harpak <- NULL
for(guess in c(1,3)){
n <- 0
H <- 0
J <- 0
for(i in 1:length(missing.0.files)){
hessian_file <- paste("./summary/PSJS_", file.names[i], "_guess_", guess, "_hessian.txt",
sep = "")
hessian <- read.table(hessian_file)
H.inc <- matrix(-colSums(hessian), 2, 2)
gradient_file <- paste("./summary/PSJS_", file.names[i], "_guess_", guess, "_gradient.txt",
sep = "")
gradient <- as.matrix(read.table(gradient_file))
J.inc <- crossprod(gradient)
n <- n+dim(gradient)[1]
H <- H + H.inc
J <- J + J.inc
}
H <- H/n
J <- J/n
G <- H %*% (solve(J, H))
Godambe.Harpak <- cbind(Godambe.Harpak, c(solve(G)/n))
}
# Godambe of IS-IGC model
Godambe.JS <- NULL
for(guess in c(1)){
n.JS <- 0
H.JS <- 0
J.JS <- 0
for(i in 1:length(missing.0.files)){
hessian_file <- paste("./summary/", file.names[i], "_guess_", guess, "_HKY_JS_hessian.txt",
sep = "")
hessian <- read.table(hessian_file)
x.length <- sqrt(dim(hessian)[2])
H.inc <- matrix(-colSums(hessian), x.length, x.length)
gradient_file <- paste("./summary/", file.names[i], "_guess_", guess, "_HKY_JS_gradient.txt",
sep = "")
gradient <- as.matrix(read.table(gradient_file))
J.inc <- crossprod(gradient)
n.JS <- n.JS + dim(gradient)[1]
H.JS <- H.JS + H.inc
J.JS <- J.JS + J.inc
}
H.JS <- H.JS/n.JS
J.JS <- J.JS/n.JS
G.JS <- H.JS %*% (solve(J.JS, H.JS))
Godambe.JS <- cbind(Godambe.JS, c(diag(solve(G.JS)/n.JS)))
}
# read in IS-IGC estimate
summary_file = paste( "./summary/", file.names[1], "_guess_1_HKY_JS_summary.txt", sep = "")
all <- readLines(summary_file, n = -1)
col.names <- "HKY+IS-IGC"
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
JS.HKY <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
show.mat <- rbind(exp(-ll.list[, 7]),
exp(log(exp(-ll.list[, 7])-1.0)-1.96*sqrt(Godambe.Harpak[4,]))+1.0,
exp(log(exp(-ll.list[, 7])-1.0)+1.96*sqrt(Godambe.Harpak[4,]))+1.0,
exp(ll.list[, 6] - ll.list[, 7]),
exp(ll.list[, 6] - ll.list[, 7] - 1.96*sqrt(Godambe.Harpak[1, ])),
exp(ll.list[, 6] - ll.list[, 7] + 1.96*sqrt(Godambe.Harpak[1, ])),
JS.HKY["Tau",],
JS.HKY["Tau",]/exp(1.96*sqrt(Godambe.JS[1, ])),
JS.HKY["Tau",]*exp(1.96*sqrt(Godambe.JS[1, ]))
)
colnames(show.mat) <- paste("Guess", c(1, 3))
rownames(show.mat) <- c("tract_length", "min", "max", "PS-IGC Tau", "min", "max",
"IS-IGC Tau", "min", "max")
round(show.mat, digits = 2)
JK.HKY
JS.HKY
JS.HKY.results <- NULL
for(name in file.names){
summary_file = paste( "./summary/", name, "_guess_1_HKY_JS_summary.txt", sep = "")
all <- readLines(summary_file, n = -1)
col.names <- name
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
JS.HKY <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.results <- cbind(JS.HKY.results, JS.HKY)
}
View(JS.HKY.results)
dim(JS.HKY.results)
JS.HKY.results[9:19,]
JS.HKY.results[10:20,]
JS.HKY.results[20:30,]
num.IGC <- rowSums(JS.HKY.results[20:30,])
num.IGC
num.IGC <- sum(rowSums(JS.HKY.results[20:30,]))
num.IGC
rowSums(JS.HKY.results[c(31, 34:41),])
num.IGC <- sum(rowSums(JS.HKY.results[20:30,]))
num.Mut <- sum(rowSums(JS.HKY.results[c(31, 34:41),]))
num.IGC/(num.IGC + num.Mut)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
Godambe.guess.1 <- NULL
Godambe.guess.2 <- NULL
Godambe.JS      <- NULL
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("PSJS guess 1 Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix= ", paste(Godambe.matrix), "\n")
Godambe.guess.1 <- cbind(Godambe.guess.1, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("PSJS guess 2 Gadient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.2["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.guess.2 <- cbind(Godambe.guess.2, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("JS Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/JS.HKY.rv.nonclock.summary["ll",pair], "\n")
# if(pair == "YER074W_YIL069C") next
Godambe.matrix <- read.table(paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_godambe.txt", sep = ""))
#cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.JS <- cbind(Godambe.JS, c(diag(solve(Godambe.matrix)/dim(gradient.list)[1])))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
Godambe.guess.1 <- NULL
Godambe.guess.2 <- NULL
Godambe.JS      <- NULL
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("PSJS guess 1 Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix= ", paste(Godambe.matrix), "\n")
Godambe.guess.1 <- cbind(Godambe.guess.1, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("PSJS guess 2 Gadient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.2["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.guess.2 <- cbind(Godambe.guess.2, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("JS Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/JS.HKY.rv.nonclock.summary["ll",pair], "\n")
# if(pair == "YER074W_YIL069C") next
Godambe.matrix <- read.table(paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_godambe.txt", sep = ""))
#cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.JS <- cbind(Godambe.JS, c(diag(solve(Godambe.matrix)/dim(gradient.list)[1])))
}
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("PSJS guess 1 Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
Godambe.guess.1 <- NULL
Godambe.guess.2 <- NULL
Godambe.JS      <- NULL
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("PSJS guess 1 Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix= ", paste(Godambe.matrix), "\n")
Godambe.guess.1 <- cbind(Godambe.guess.1, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("PSJS guess 2 Gadient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.2["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.guess.2 <- cbind(Godambe.guess.2, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("JS Gradient = ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/JS.HKY.rv.nonclock.summary["ll",pair], "\n")
# if(pair == "YER074W_YIL069C") next
Godambe.matrix <- read.table(paste("./summary/JS_HKY_", pair, "_One_rate_rv_nonclock_godambe.txt", sep = ""))
#cat("Godambe matrix = ", paste(Godambe.matrix), "\n")
Godambe.JS <- cbind(Godambe.JS, c(diag(solve(Godambe.matrix)/dim(gradient.list)[1])))
}
