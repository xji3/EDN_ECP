if(sim_col %in% colnames(target_summary) ){
if (target_summary["ll", sim_col] > best.lnL){
best.lnL <- target_summary["ll", sim_col]
best.guess <- guess
}
}
}
if(! is.null(best.guess)){
combined.PSJS.tract.summary <- cbind(combined.PSJS.tract.summary,
get(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_guess_", toString(best.guess), "_summary", sep = ""))[, sim_col])
col.list <- c(col.list, sim_col)
}
}
colnames(combined.PSJS.tract.summary) <- col.list
assign(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""), combined.PSJS.tract.summary)
}
# Now read in actual mean tract length in each simulated dataset
for (tract in Tract.list){
sim.tract <- NULL
for(sim in 1:100){
sim_log <- paste("./TenthTau/Tract_", toString(tract), ".0_HKY/sim_", toString(sim),
"/YDR418W_YEL054C_sim_", toString(sim), "_IGC.log", sep = "")
# now read in log file
log_info <- read.table(sim_log, header = TRUE)
realized.tract.length <- log_info[, "stop_pos"] - log_info[, "start_pos"] + 1
potential.tract.length <- log_info[, "tract_length"]
# Now get longest length of variant subtract of each tract
diff.tracts <- log_info[, "num_diff"] > 0
if (sum(diff.tracts)){
subtract.length.list <- NULL
for(row.num in (1:dim(log_info)[1])[diff.tracts]){
donor.seq <- strsplit(toString(log_info[row.num, "template_seq"]), "")[[1]]
recipient.seq <- strsplit(toString(log_info[row.num, "overide_seq"]), "")[[1]]
first.pos <- FALSE
for(seq.pos in 1:length(donor.seq)){
if(donor.seq[seq.pos] != recipient.seq[seq.pos]){
last.pos <- seq.pos
if(!first.pos){
first.pos <- seq.pos
}
}
}
subtract.length.list <- c(subtract.length.list, last.pos - first.pos + 1)
}
}
new.info <- matrix(c(dim(log_info)[1], mean(potential.tract.length), sd(potential.tract.length),
mean(realized.tract.length), sd(realized.tract.length),
mean(potential.tract.length[diff.tracts]),
mean(realized.tract.length[diff.tracts]),
mean(subtract.length.list),
sum(log_info[, "num_diff"] > 1)),
9, 1)
rownames(new.info) <- c("num IGC", "mean potential tract length", "sd potential tract length",
"mean realized tract length", "sd realized tract length",
"mean potential nonidentical tract length", "mean realized nonidentical tract length",
"mean subtract length", "num IGC with at least two variant sites")
colnames(new.info) <- paste("sim_", toString(sim), sep = "")
sim.tract <- cbind(sim.tract, new.info)
}
assign(paste("TenthTau.sim.tract.", toString(tract), sep = ""), sim.tract)
}
realized.tract.dist <- function(L, p){
x <- 1:(L-1)
dist.1 <- (2 + (L-1-x)*p)/(1.0/p + L -1.)*(1-p)^(x-1)
dist.L <- 1/p/(1.0/p + L -1.)*(1-p)^(L-1)
dist <- c(dist.1, dist.L)
mean.L <- sum(x * dist.1) + L*dist.L
var.L <- sum(x^2 * dist.1) + L^2*dist.L - mean.L^2
return(list(dist = dist, mean = mean.L, sd = sqrt(var.L)))
}
Tract.list <- c(10.0)
for(tract in Tract.list){
target_summary <- get(paste("PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
HalfTau.target_summary <- get(paste("HalfTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
HalfTau.col.names <- HalfTau.target_summary["tract_length", ] < 10*tract
HalfTau.sim_info <- get(paste("HalfTau.sim.tract.", toString(tract), sep = ""))
hist(HalfTau.target_summary["tract_length", col.names], breaks = 50,
main = paste("Half Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
TenthTau.target_summary <- get(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
TenthTau.col.names <- TenthTau.target_summary["tract_length", ] < 10*tract
TenthTau.sim_info <- get(paste("TenthTau.sim.tract.", toString(tract), sep = ""))
hist(TenthTau.target_summary["tract_length", col.names], breaks = 50,
main = paste("Tenth Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
print(paste("Tract = ", toString(tract), ".0 combined PSJS HKY Results", sep = ""))
print("Real value used in simulation: Tau = 22.581687801812059, r2 = 0.53919187294821969, r3 = 11.580030840998282")
matrix.print <- matrix(c(sum(TenthTau.col.names), sum(HalfTau.col.names), sum(col.names),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names]), mean(target_summary["tract_length", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names]), sd(target_summary["tract_length", col.names]),
# mean(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), mean(sim_info["mean subtract length", col.names]),
# sd(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), sd(sim_info["mean subtract length", col.names])),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), mean(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), sd(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
mean(TenthTau.target_summary["r2", TenthTau.col.names]), mean(HalfTau.target_summary["r2", HalfTau.col.names]), mean(target_summary["r2", col.names]),
sd(TenthTau.target_summary["r2", TenthTau.col.names]), sd(HalfTau.target_summary["r2", HalfTau.col.names]), sd(target_summary["r2", col.names]),
mean(TenthTau.target_summary["r3", TenthTau.col.names]), mean(HalfTau.target_summary["r3", HalfTau.col.names]), mean(target_summary["r3", col.names]),
sd(TenthTau.target_summary["r3", TenthTau.col.names]), sd(HalfTau.target_summary["r3", HalfTau.col.names]), sd(target_summary["r3", col.names])
),
3, 9)
colnames(matrix.print) <- c("Total samples","mean tract length","sd tract length","mean Tau","sd Tau",
"mean r2", "sd r2", "mean r3", "sd r3")
rownames(matrix.print) <- c("HalfTau", "Tau")
print("Now showing summary of estimates")
print(matrix.print)
}
Tract.list <- c(10.0)
for(tract in Tract.list){
target_summary <- get(paste("PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
HalfTau.target_summary <- get(paste("HalfTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
HalfTau.col.names <- HalfTau.target_summary["tract_length", ] < 10*tract
HalfTau.sim_info <- get(paste("HalfTau.sim.tract.", toString(tract), sep = ""))
hist(HalfTau.target_summary["tract_length", col.names], breaks = 50,
main = paste("Half Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
TenthTau.target_summary <- get(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
TenthTau.col.names <- TenthTau.target_summary["tract_length", ] < 10*tract
TenthTau.sim_info <- get(paste("TenthTau.sim.tract.", toString(tract), sep = ""))
hist(TenthTau.target_summary["tract_length", col.names], breaks = 50,
main = paste("Tenth Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
print(paste("Tract = ", toString(tract), ".0 combined PSJS HKY Results", sep = ""))
print("Real value used in simulation: Tau = 22.581687801812059, r2 = 0.53919187294821969, r3 = 11.580030840998282")
matrix.print <- matrix(c(sum(TenthTau.col.names), sum(HalfTau.col.names), sum(col.names),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names]), mean(target_summary["tract_length", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names]), sd(target_summary["tract_length", col.names]),
# mean(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), mean(sim_info["mean subtract length", col.names]),
# sd(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), sd(sim_info["mean subtract length", col.names])),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), mean(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), sd(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
mean(TenthTau.target_summary["r2", TenthTau.col.names]), mean(HalfTau.target_summary["r2", HalfTau.col.names]), mean(target_summary["r2", col.names]),
sd(TenthTau.target_summary["r2", TenthTau.col.names]), sd(HalfTau.target_summary["r2", HalfTau.col.names]), sd(target_summary["r2", col.names]),
mean(TenthTau.target_summary["r3", TenthTau.col.names]), mean(HalfTau.target_summary["r3", HalfTau.col.names]), mean(target_summary["r3", col.names]),
sd(TenthTau.target_summary["r3", TenthTau.col.names]), sd(HalfTau.target_summary["r3", HalfTau.col.names]), sd(target_summary["r3", col.names])
),
3, 9)
colnames(matrix.print) <- c("Total samples","mean tract length","sd tract length","mean Tau","sd Tau",
"mean r2", "sd r2", "mean r3", "sd r3")
rownames(matrix.print) <- c("TenthTau", "HalfTau", "Tau")
print("Now showing summary of estimates")
print(matrix.print)
}
Tract.list <- c(10.0)
for(tract in Tract.list){
target_summary <- get(paste("PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
HalfTau.target_summary <- get(paste("HalfTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
HalfTau.col.names <- HalfTau.target_summary["tract_length", ] < 10*tract
HalfTau.sim_info <- get(paste("HalfTau.sim.tract.", toString(tract), sep = ""))
hist(HalfTau.target_summary["tract_length", HalfTau.col.names], breaks = 50,
main = paste("Half Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
TenthTau.target_summary <- get(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
TenthTau.col.names <- TenthTau.target_summary["tract_length", ] < 10*tract
TenthTau.sim_info <- get(paste("TenthTau.sim.tract.", toString(tract), sep = ""))
hist(TenthTau.target_summary["tract_length", TenthTau.col.names], breaks = 50,
main = paste("Tenth Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
print(paste("Tract = ", toString(tract), ".0 combined PSJS HKY Results", sep = ""))
print("Real value used in simulation: Tau = 22.581687801812059, r2 = 0.53919187294821969, r3 = 11.580030840998282")
matrix.print <- matrix(c(sum(TenthTau.col.names), sum(HalfTau.col.names), sum(col.names),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names]), mean(target_summary["tract_length", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names]), sd(target_summary["tract_length", col.names]),
# mean(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), mean(sim_info["mean subtract length", col.names]),
# sd(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), sd(sim_info["mean subtract length", col.names])),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), mean(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), sd(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
mean(TenthTau.target_summary["r2", TenthTau.col.names]), mean(HalfTau.target_summary["r2", HalfTau.col.names]), mean(target_summary["r2", col.names]),
sd(TenthTau.target_summary["r2", TenthTau.col.names]), sd(HalfTau.target_summary["r2", HalfTau.col.names]), sd(target_summary["r2", col.names]),
mean(TenthTau.target_summary["r3", TenthTau.col.names]), mean(HalfTau.target_summary["r3", HalfTau.col.names]), mean(target_summary["r3", col.names]),
sd(TenthTau.target_summary["r3", TenthTau.col.names]), sd(HalfTau.target_summary["r3", HalfTau.col.names]), sd(target_summary["r3", col.names])
),
3, 9)
colnames(matrix.print) <- c("Total samples","mean tract length","sd tract length","mean Tau","sd Tau",
"mean r2", "sd r2", "mean r3", "sd r3")
rownames(matrix.print) <- c("TenthTau", "HalfTau", "Tau")
print("Now showing summary of estimates")
print(matrix.print)
}
hist(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<80], breaks = 50)
hist(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<45], breaks = 50)
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<45])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<80])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<90])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<1000])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<100])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<200])
mean(TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",TenthTau_PSJS_HKY_Tract_10_combined_summary["tract_length",]<400])
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
source("./ReadInSummary.R")
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
source("./ReadInSummary.R")
realized.tract.dist <- function(L, p){
x <- 1:(L-1)
dist.1 <- (2 + (L-1-x)*p)/(1.0/p + L -1.)*(1-p)^(x-1)
dist.L <- 1/p/(1.0/p + L -1.)*(1-p)^(L-1)
dist <- c(dist.1, dist.L)
mean.L <- sum(x * dist.1) + L*dist.L
var.L <- sum(x^2 * dist.1) + L^2*dist.L - mean.L^2
return(list(dist = dist, mean = mean.L, sd = sqrt(var.L)))
}
Tract.list <- c(10.0)
for(tract in Tract.list){
target_summary <- get(paste("PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
HalfTau.target_summary <- get(paste("HalfTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
HalfTau.col.names <- HalfTau.target_summary["tract_length", ] < 10*tract
HalfTau.sim_info <- get(paste("HalfTau.sim.tract.", toString(tract), sep = ""))
hist(HalfTau.target_summary["tract_length", HalfTau.col.names], breaks = 50,
main = paste("Half Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
TenthTau.target_summary <- get(paste("TenthTau_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
TenthTau.col.names <- TenthTau.target_summary["tract_length", ] < 10*tract
TenthTau.sim_info <- get(paste("TenthTau.sim.tract.", toString(tract), sep = ""))
hist(TenthTau.target_summary["tract_length", TenthTau.col.names], breaks = 50,
main = paste("Tenth Tau PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
abline(v =  tract, col = 2)
print(paste("Tract = ", toString(tract), ".0 combined PSJS HKY Results", sep = ""))
print("Real value used in simulation: Tau = 22.581687801812059, r2 = 0.53919187294821969, r3 = 11.580030840998282")
matrix.print <- matrix(c(sum(TenthTau.col.names), sum(HalfTau.col.names), sum(col.names),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names]), mean(target_summary["tract_length", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names]), sd(target_summary["tract_length", col.names]),
# mean(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), mean(sim_info["mean subtract length", col.names]),
# sd(HalfTau.sim_info["mean subtract length", HalfTau.col.names]), sd(sim_info["mean subtract length", col.names])),
mean(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), mean(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), mean(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
sd(TenthTau.target_summary["tract_length", TenthTau.col.names] * TenthTau.target_summary["init_rate", TenthTau.col.names]), sd(HalfTau.target_summary["tract_length", HalfTau.col.names] * HalfTau.target_summary["init_rate", HalfTau.col.names]), sd(target_summary["tract_length", col.names] * target_summary["init_rate", col.names]),
mean(TenthTau.target_summary["r2", TenthTau.col.names]), mean(HalfTau.target_summary["r2", HalfTau.col.names]), mean(target_summary["r2", col.names]),
sd(TenthTau.target_summary["r2", TenthTau.col.names]), sd(HalfTau.target_summary["r2", HalfTau.col.names]), sd(target_summary["r2", col.names]),
mean(TenthTau.target_summary["r3", TenthTau.col.names]), mean(HalfTau.target_summary["r3", HalfTau.col.names]), mean(target_summary["r3", col.names]),
sd(TenthTau.target_summary["r3", TenthTau.col.names]), sd(HalfTau.target_summary["r3", HalfTau.col.names]), sd(target_summary["r3", col.names])
),
3, 9)
colnames(matrix.print) <- c("Total samples","mean tract length","sd tract length","mean Tau","sd Tau",
"mean r2", "sd r2", "mean r3", "sd r3")
rownames(matrix.print) <- c("TenthTau", "HalfTau", "Tau")
print("Now showing summary of estimates")
print(matrix.print)
}
assign(paste("TenthTau_HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
source("./ReadInSummary.R")
TenthTau_HMM_Tract_10_plot
# Now read in HMM results from plots
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
hmm.plot
# Now read in HMM results from plots
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
hmm.plot
file.exists(hmm.plot)
getwd()
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
getwd()
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
getwd()
# Now read in HMM results from plots
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
View(HMM_Tract_10_plot)
hist(HMM_Tract_100_plot[1,])
hist(HMM_Tract_100_plot[1,], breaks = 509)
hist(HMM_Tract_100_plot[1,], breaks = 50)
hist(HMM_Tract_50_plot[1,], breaks = 50)
hist(Half_HMM_Tract_50_plot[1,], breaks = 50)
hist(HalfTau_HMM_Tract_50_plot[1,], breaks = 50)
View(HalfTau_PSJS_HKY_Tract_10_combined_summary)
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/HalfTau/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HalfTau_HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
# Now read in HMM results from plots for TenthTau case
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/TenthTau/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_YDR418W_YEL054C_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("TenthTau_HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
hist(HalfTau_HMM_Tract_50_plot[1,], breaks = 50)
hist(TenthTau_HMM_Tract_50_plot[1,], breaks = 50)
hist(TenthTau_HMM_Tract_50_plot[1,TenthTau_HMM_Tract_50_plot[1,] < 500], breaks = 50)
mean(TenthTau_HMM_Tract_50_plot[1,TenthTau_HMM_Tract_50_plot[1,] < 500])
mean(TenthTau_HMM_Tract_10_plot[1,TenthTau_HMM_Tract_50_plot[1,] < 500])
mean(TenthTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_50_plot[1,] < 500])
mean(TenthTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 500])
hist(TenthTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 500], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 500], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,] < 500], breaks = 50)
mean(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,] < 500])
mean(HalfTau_HMM_Tract_200_plot[1,HalfTau_HMM_Tract_200_plot[1,] < 500])
mean(HalfTau_HMM_Tract_200_plot[1,HalfTau_HMM_Tract_200_plot[1,] < 1000])
hist(HalfTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 1000], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 999], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 990], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,TenthTau_HMM_Tract_100_plot[1,] < 900], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,] < 1000], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,] < 999], breaks = 50)
hist(HalfTau_HMM_Tract_200_plot[1,HalfTau_HMM_Tract_200_plot[1,] < 999], breaks = 50)
hist(HalfTau_HMM_Tract_300_plot[1,HalfTau_HMM_Tract_300_plot[1,] < 999], breaks = 50)
hist(HalfTau_HMM_Tract_400_plot[1,HalfTau_HMM_Tract_400_plot[1,] < 999], breaks = 50)
setwd("/Users/xji3/GitFolders/EDN_ECP/SimulationStudy/")
# Now read in HMM results from plots
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_EDN_ECP_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
# Now read in HMM results from plots for HalfTau case
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/HalfTau/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_EDN_ECP_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("HalfTau_HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
# Now read in HMM results from plots for TenthTau case
Tract.list <- c(3.0, 10.0, 50.0, 100.0, 200.0, 300.0, 400.0, 500.0)
for(tract in Tract.list){
hmm.tract.plots <- NULL
for(sim in 1:100){
hmm.plot <- paste("./plot/TenthTau/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/HMM_EDN_ECP_HKY_rv_lnL_sim_',
toString(sim), '_1D_surface.txt', sep = "")
if (file.exists(hmm.plot)){
lnL.surface <- read.table(hmm.plot)
max.idx <- which.max(lnL.surface[, 2])
new.summary <- matrix(c(3.0*exp(-lnL.surface[max.idx, 1]), lnL.surface[max.idx, 2]), 2, 1)
rownames(new.summary) <- c("tract in nt", "lnL")
colnames(new.summary) <- paste("sim_", toString(sim), sep = "")
hmm.tract.plots <- cbind(hmm.tract.plots, new.summary)
}
}
assign(paste("TenthTau_HMM_Tract_", toString(tract), "_plot", sep = ""), hmm.tract.plots)
}
hist(HMM_Tract_10_plot[1,], breaks = 50)
mean(HMM_Tract_10_plot[1,])
mean(HMM_Tract_10_plot[1,HMM_Tract_10_plot[1,]<300])
hist(HMM_Tract_3_plot[1,], breaks = 50)
mean(HMM_Tract_3_plot[1,])
hist(HMM_Tract_50_plot[1,], breaks = 50)
mean(HMM_Tract_50_plot[1,])
hist(log(HMM_Tract_3_plot[1,]), breaks = 50)
log(3)
hist(log(HMM_Tract_10_plot[1,]), breaks = 50)
log(10)
hist(log(HMM_Tract_50_plot[1,]), breaks = 50)
log(50)
hist(log(HMM_Tract_100_plot[1,]), breaks = 50)
log(100)
log(200)
hist(log(HMM_Tract_200_plot[1,]), breaks = 50)
hist(log(HMM_Tract_300_plot[1,]), breaks = 50)
log(300)
hist(HalfTau_HMM_Tract_3_plot[1,], breaks = 50)
hist(HalfTau_HMM_Tract_3_plot[1,HalfTau_HMM_Tract_3_plot[1,]<999], breaks = 50)
mean(HalfTau_HMM_Tract_3_plot[1,HalfTau_HMM_Tract_3_plot[1,]<999])
hist(HalfTau_HMM_Tract_10_plot[1,HalfTau_HMM_Tract_10_plot[1,]<999], breaks = 50)
mean(HalfTau_HMM_Tract_10_plot[1,HalfTau_HMM_Tract_10_plot[1,]<999])
hist(HalfTau_HMM_Tract_50_plot[1,HalfTau_HMM_Tract_50_plot[1,]<999], breaks = 50)
hist(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,]<999], breaks = 50)
mean(HalfTau_HMM_Tract_50_plot[1,HalfTau_HMM_Tract_50_plot[1,]<999])
mean(HalfTau_HMM_Tract_100_plot[1,HalfTau_HMM_Tract_100_plot[1,]<999])
mean(HalfTau_HMM_Tract_200_plot[1,HalfTau_HMM_Tract_200_plot[1,]<999])
mean(HalfTau_HMM_Tract_300_plot[1,HalfTau_HMM_Tract_300_plot[1,]<999])
mean(HalfTau_HMM_Tract_400_plot[1,HalfTau_HMM_Tract_400_plot[1,]<999])
mean(HalfTau_HMM_Tract_500_plot[1,HalfTau_HMM_Tract_500_plot[1,]<999])
